{"remainingRequest":"/home/lua/projects/danaxa/danaxa-task/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lua/projects/danaxa/danaxa-task/src/components/List.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/lua/projects/danaxa/danaxa-task/src/components/List.vue","mtime":1619276217962},{"path":"/home/lua/projects/danaxa/danaxa-task/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lua/projects/danaxa/danaxa-task/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/lua/projects/danaxa/danaxa-task/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/lua/projects/danaxa/danaxa-task/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lua/projects/danaxa/danaxa-task/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lua/projects/danaxa/danaxa-task/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3QtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoubGlzdC1hY3Rpb25zIHsKICAuY3VzdG9tLWNoZWNrYm94IHsKICAgIG1hcmdpbjogMXB4IDI3cHggIWltcG9ydGFudDsKICB9CiAgd2lkdGg6IDMwMHB4OwogIGhlaWdodDogNTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjgyODJEOwogIHBhZGRpbmctdG9wOiAxMnB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNmE2YTcyOwp9Ci5saXN0LXBhcmVudCB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIHdpZHRoOiAzMDBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjgyODJEOwp9Ci5saXN0LWl0ZW0gewogIGRpc3BsYXk6IGZsZXg7CiAgbWFyZ2luOiA4cHg7CiAgcGFkZGluZzogOHB4Owp9Ci5saXN0LWl0ZW06aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICMyZTJlMzEgIWltcG9ydGFudDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdHJhbnNpdGlvbjogMC4ycyBhbGw7Cn0KLmxpc3QtaXRlbSBkaXYgewogIHdpZHRoOiAxNTBweDsKfQoubGlzdC1pdGVtPiogewogIGZsZXg6IDAgMCBhdXRvOwp9Ci5saXN0LWl0ZW0tYnRuIHsKICB3aWR0aDogODBweDsKICBjb2xvcjogd2hpdGU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzI4MjgyRDsKICBib3JkZXI6IDFweCBzb2xpZCAjNmE2YTcyOwogIGJvcmRlci1yYWRpdXM6IDNweDsKfQoubGlzdC1pdGVtLW5hbWUgewogIGNvbG9yOiB3aGl0ZTsKfQo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"list-container\">\n    <b-form-checkbox-group class=\"list-actions\" id=\"checkbox-group\" @change=\"updateList\" v-model=\"selected\">\n      <b-form-checkbox v-for=\"item in options\" :key=\"item.index\" :value=\"item.value\">\n        <icon :data=\"item.icon\" width=\"20\" height=\"20\" color=\"white\" />\n      </b-form-checkbox>\n    </b-form-checkbox-group>\n    <div class=\"list-parent\">\n      <div v-for=\"obj in showList\" :key=\"obj.index\" class=\"list-item\">\n        <icon class=\"list-item-icon\" :data=\"obj.icon\" width=\"22\" height=\"22\" :color=\"obj.icon_color\" />\n        <div class=\"list-item-name\">{{obj.name}}</div>\n        <button class=\"list-item-btn\">{{obj.num}}</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import human from '@/assets/svg/human.svg'\n  import binary from '@/assets/svg/binary.svg'\n  import newDoc from '@/assets/svg/newDoc.svg'\n  export default {\n    name: 'HelloWorld',\n    data() {\n      return {\n        selected: [],\n        options: [{\n            item: 'boundingBox',\n            name: 'boundingBox',\n            icon: binary,\n            value: 1\n          },\n          {\n            item: 'humanBox',\n            name: 'humanBox',\n            icon: human,\n            value: 2\n          },\n          {\n            item: 'cornerBox',\n            name: 'cornerBox',\n            icon: newDoc,\n            value: 3\n          }\n        ],\n        showList: [],\n        arrList: [{\n            icon: binary,\n            icon_color: 'yellow',\n            name: 'binary',\n            num: 16,\n            id: 1\n          },\n          {\n            icon: binary,\n            icon_color: 'green',\n            name: 'binary',\n            num: 33,\n            id: 1\n          },\n          {\n            icon: binary,\n            icon_color: 'purple',\n            name: 'binary',\n            num: 30,\n            id: 1\n          },\n          {\n            icon: newDoc,\n            icon_color: 'green',\n            name: 'newDoc',\n            num: 43,\n            id: 3\n          },\n          {\n            icon: newDoc,\n            icon_color: 'yellow',\n            name: 'newDoc',\n            num: 44,\n            id: 3\n          },\n          {\n            icon: newDoc,\n            icon_color: 'purple',\n            name: 'newDoc',\n            num: 45,\n            id: 3\n          },\n          {\n            icon: human,\n            icon_color: 'red',\n            name: 'human_box',\n            num: 44,\n            id: 2\n          },\n          {\n            icon: human,\n            icon_color: 'green',\n            name: 'human_box',\n            num: 45,\n            id: 2\n          },\n        ]\n      }\n    },\n    mounted() {\n      this.updateList()\n    },\n    methods: {\n      updateList() {\n        if (this.selected.length > 0) {\n          let filterArr = []\n          const newArr = this.selected.map(val => this.arrList.filter(item => item.id === val))\n          newArr.forEach(e => {\n            e.forEach(i => {\n              filterArr.push(i)\n            })\n          });\n          this.showList = filterArr\n        } else {\n          this.showList = this.arrList\n        }\n      }\n    },\n  }\n</script>\n<style lang=\"scss\">\n  .list-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .list-actions {\n    .custom-checkbox {\n      margin: 1px 27px !important;\n    }\n    width: 300px;\n    height: 50px;\n    background-color: #28282D;\n    padding-top: 12px;\n    border-bottom: 1px solid #6a6a72;\n  }\n  .list-parent {\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    background-color: #28282D;\n  }\n  .list-item {\n    display: flex;\n    margin: 8px;\n    padding: 8px;\n  }\n  .list-item:hover {\n    background-color: #2e2e31 !important;\n    cursor: pointer;\n    transition: 0.2s all;\n  }\n  .list-item div {\n    width: 150px;\n  }\n  .list-item>* {\n    flex: 0 0 auto;\n  }\n  .list-item-btn {\n    width: 80px;\n    color: white;\n    background-color: #28282D;\n    border: 1px solid #6a6a72;\n    border-radius: 3px;\n  }\n  .list-item-name {\n    color: white;\n  }\n</style>"]}]}